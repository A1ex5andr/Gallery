var app = angular.module('store', [
	'ui.router',
	'ngResource',
	'scopeTest',
	'Slides'
]);

app.controller('PageCtrl', ['$log', function ($log/* $scope, $location, $http */) {
	$log.info("Page Controller reporting on duty.");
}]);


//$.cloudinary.config({ cloud_name: 'reaktivate', api_key: '126867996133227'})

app.factory('$localstorage', ['$window', function($window) {
        return {
            set: function(key, value) {
                $window.localStorage[key] = value;
            },
            get: function(key, defaultValue) {
                return $window.localStorage[key] || defaultValue;
            },
            setObject: function(key, value) {
                $window.localStorage[key] = JSON.stringify(value);
            },
            getObject: function(key) {
                return JSON.parse($window.localStorage[key] || '{}');
            }
        }
    }]);

app.service('resService', function ($resource) {
    return $resource('slides.json');
});
app.config(function($stateProvider, $urlRouterProvider) {
    // For any unmatched url, redirect to /
    $urlRouterProvider.otherwise("/");
    // States
    $stateProvider
        .state('index', {
            url: "/",
            views: {
                '': { templateUrl: 'layout/home.html' },
                'header@index': { templateUrl: 'layout/header.html' },
                'slider@index': { templateUrl: 'layout/slider.html'},
                'footer@index': { templateUrl: 'layout/footer.html' }
            }
        })
        .state('test', {
            url: "/test",
            views: {
                '': { templateUrl: 'layout/test.html'},
                'header@test': { templateUrl: 'layout/header.html' },
                'footer@test': { templateUrl: 'layout/footer.html' }
            }
        });
});
angular.module('Authentication', []).controller('LoginCtrl', ['$scope', '$localstorage', 'AuthService', '$location',
        function($scope, $localstorage, AuthService, $location) {
            $scope.username = '';
            $scope.password = '';
            var self = this;

            var userIdentity = $localstorage.getObject('userIdentity');
            if (userIdentity) {
                $scope.username = userIdentity.username;
            }

            this.logUser = function(username, password) {
                $scope.dataLoading = true;
                AuthService.login(username, password, self.onLoginSuccess, self.onError);
            };

            this.onLoginSuccess = function(response) {
                AuthService.setLoggedIn(true);
                $localstorage.setObject('userIdentity', {
                    userId: response.id,
                    username: $scope.username,
                    token: response.token
                });
                $scope.dataLoading = false;
                console.log("saved local storage: " + JSON.stringify($localstorage.getObject('userIdentity')));
                alert("Hello, " + response.name + "\nId: " + response.id + "\nToken: " + response.token);
                $location.path('/home');
            };

            this.onError = function(error) {
                $scope.dataLoading = false;
                console.error(JSON.stringify(error));
                if (error.data) { alert("Login failed: " + error.data.errorMessage); }
            };
    }]);


// initialise the currentUser global variable from a cookie to
// keep the user logged in between page reloads,
// it also contains and an event handler to check
// if the user is logged in before each route change
//app.run(['$rootScope', '$location', '$cookieStore', '$http',
//    function ($rootScope, $location, $cookieStore, $http) {
//        // keep user logged in after page refresh
//        $rootScope.globals = $cookieStore.get('globals') || {};
//        if ($rootScope.globals.currentUser) {
//            $http.defaults.headers.common['Authorization'] = 'Basic ' + $rootScope.globals.currentUser.authdata; // jshint ignore:line
//        }
//        $rootScope.$on('$locationChangeStart', function (event, next, current) {
//            // redirect to login page if not logged in
//            if ($location.path() !== '/login' && !$rootScope.globals.currentUser) {
//                $location.path('/');
//            }
//        });
//    }]);
angular.module('scopeTest', [])

    .controller('FirstCtrl', function () {

    }).controller('SecondCtrl', function () {

});

angular.module('Slides', [])
    .controller('SliderCtrl', function ($scope) {
        $scope.images = [
            {"url": "img/slides/001.jpg", "rate": 3, "id": "01", "count": 111},
            {"url": "img/slides/002.jpg", "rate": 3, "id": "02", "count": 211},
            {"url": "img/slides/003.jpg", "rate": 3, "id": "03", "count": 1311},
            {"url": "img/slides/004.jpg", "rate": 3, "id": "04", "count": 1531},
            {"url": "img/slides/005.jpg", "rate": 3, "id": "05", "count": 3241},
            {"url": "img/slides/006.jpg", "rate": 3, "id": "06", "count": 11},
            {"url": "img/slides/007.jpg", "rate": 3, "id": "07", "count": 5331}
        ];
        $scope.predicate = "id";
        $scope.rateFunction = function(rating) {
            console.log("Rating selected - " + rating);
        };
    })
    .directive('slideshow', function () {
        return {
            restrict: 'AC',
            link: function (scope, element, attrs) {
                var config = angular.extend({
                    slides: '.slideBl'
                }, scope.$eval(attrs.slideshow));
                setTimeout(function () {
                    element.cycle(config);
                }, 0);

                //
                if($(".slideBl:visible")){
                    console.log($(".slideBl:visible").attr('id'));
                };
            }
        };
    })
    .directive("starRating", function() {
        return {
            restrict : "A",
            template : "<ul class='rating'>" +
            "  <li ng-repeat='star in stars' ng-class='star' ng-click='toggle($index)'>" +
            "    <i class='fa fa-star'></i>" + //&#9733
            "  </li>" +
            "</ul>",
            scope : {
                ratingValue : "=",
                max : "=",
                onRatingSelected : "&"
            },
            link : function(scope, elem, attrs) {
                var updateStars = function() {
                    scope.stars = [];
                    for ( var i = 0; i < scope.max; i++) {
                        scope.stars.push({
                            filled : i < scope.ratingValue
                        });
                    }
                };
                scope.toggle = function(index) {
                    scope.ratingValue = index + 1;
                    scope.onRatingSelected({
                        rating : index + 1
                    });
                };
                scope.$watch("ratingValue", function(oldVal, newVal) {
                    if (newVal) { updateStars(); }
                });
            }
        };
    });
